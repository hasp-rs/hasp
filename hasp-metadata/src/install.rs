// Copyright (c) The hasp Contributors
// SPDX-License-Identifier: MIT OR Apache-2.0

use crate::PackageDirectory;
use camino::Utf8PathBuf;
use chrono::{DateTime, Local};
use serde::{Deserialize, Serialize};

/// A message generated by hasp when an installation is started.
#[derive(Clone, Debug, Deserialize, Serialize)]
#[serde(rename_all = "kebab-case")]
pub struct InstallStarted {
    /// Information about the package being installed.
    pub package: PackageDirectory,

    /// Whether this is a force installation, overwriting an existing install.
    pub force: bool,

    /// The time at which the installation was started.
    pub start_time: DateTime<Local>,

    /// The full path to the temporary directory to which the install is being performed.
    pub new_dir: Utf8PathBuf,

    /// If this is an update to the same directory, the full path to the temporary directory to
    /// which the previous install will been moved.
    pub old_dir: Utf8PathBuf,
    // TODO: namespace-specific metadata
}

/// An installation process succeeded.
#[derive(Clone, Debug, Deserialize, Serialize)]
#[serde(rename_all = "kebab-case")]
pub struct InstallSuccess {
    /// Information about the package being installed.
    pub package: PackageDirectory,

    /// Whether this is a force installation, overwriting an existing install.
    pub force: bool,

    /// The time at which the installation was started.
    pub start_time: DateTime<Local>,

    /// The time at which the installation process ended.
    pub end_time: DateTime<Local>,
    // TODO: more specific metadata
}

/// An installation process failed.
#[derive(Clone, Debug, Deserialize, Serialize)]
#[serde(rename_all = "kebab-case")]
pub struct InstallFailed {
    /// Information about the package being installed.
    pub package: PackageDirectory,

    /// Whether this is a force installation, overwriting an existing install.
    pub force: bool,

    /// The time at which the installation was started.
    pub start_time: DateTime<Local>,

    /// The time at which the installation process ended.
    pub end_time: DateTime<Local>,

    /// The reason the install failed.
    pub reason: FailureReason,
}

/// The reason a package installation failed.
#[derive(Clone, Debug, Deserialize, Serialize)]
#[serde(rename_all = "kebab-case", tag = "type")]
pub enum FailureReason {
    /// The external installation process failed.
    ProcessFailed {
        /// Metadata associated with the failure.
        metadata: serde_json::Value,
    },

    /// The installation process was aborted due to an internal error in hasp.
    Aborted {
        /// Metadata associated with the abort.
        metadata: serde_json::Value,
    },
}
